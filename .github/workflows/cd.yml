name: Continuous Deployment
  
on:
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: dataanalyticaio
  GAR_LOCATION: us-west1
  SERVICE: dataanalyticaio
  REGION: us-west1

jobs:
  on-success:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up secrets
        run: |
          echo "_DB_NAME=${{ secrets._DB_NAME }}" >> $GITHUB_ENV
          echo "_DB_USER=${{ secrets._DB_USER }}" >> $GITHUB_ENV
          echo "_DB_PASSWORD=${{ secrets._DB_PASSWORD }}" >> $GITHUB_ENV
          echo "_SECRET_KEY=${{ secrets._SECRET_KEY }}" >> $GITHUB_ENV
          echo "_AUTH=${{ secrets._AUTH }}" >> $GITHUB_ENV
          echo "_EMAIL_BACKEND=${{ secrets._EMAIL_BACKEND }}" >> $GITHUB_ENV
          echo "_EMAIL_HOST=${{ secrets._EMAIL_HOST }}" >> $GITHUB_ENV
          echo "_EMAIL_PORT=${{ secrets._EMAIL_PORT }}" >> $GITHUB_ENV
          echo "_EMAIL_USE_TLS=${{ secrets._EMAIL_USE_TLS }}" >> $GITHUB_ENV
          echo "_EMAIL_HOST_USER=${{ secrets._EMAIL_HOST_USER }}" >> $GITHUB_ENV
          echo "_EMAIL_HOST_PASSWORD=${{ secrets._EMAIL_HOST_PASSWORD }}" >> $GITHUB_ENV
          echo "_CLOUD_NAME=${{ secrets._CLOUD_NAME }}" >> $GITHUB_ENV
          echo "_CLOUD_API_KEY=${{ secrets._CLOUD_API_KEY }}" >> $GITHUB_ENV
          echo "_CLOUD_API_SECRET=${{ secrets._CLOUD_API_SECRET }}" >> $GITHUB_ENV

      - name: Set up port
        run: echo "_PORT=${{ secrets._PORT }}" >> $GITHUB_ENV

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          project_id: 'dataanalyticaio'
          workload_identity_provider: '${{ secrets._WIF_PROVIDER }}'
          service_account: '${{ secrets._WIF_SERVICE_ACCOUNT }}'



      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Gcloud Configuration
        run: gcloud config get project
      
      - name: Change Directory
        run: cd code/server

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"
          flags: '--allow-unauthenticated'
          env_vars: |
            _PORT=${{ secrets._PORT }}
            _DB_NAME=${{ secrets._DB_NAME }}
            _DB_USER=${{ secrets._DB_USER }}
            _DB_PASSWORD=${{ secrets._DB_PASSWORD }}
            _SECRET_KEY=${{ secrets._SECRET_KEY }}
            _AUTH=${{ secrets._AUTH }}
            _EMAIL_BACKEND=${{ secrets._EMAIL_BACKEND }}
            _EMAIL_HOST=${{ secrets._EMAIL_HOST }}
            _EMAIL_PORT=${{ secrets._EMAIL_PORT }}
            _EMAIL_USE_TLS=${{ secrets._EMAIL_USE_TLS }}
            _EMAIL_HOST_USER=${{ secrets._EMAIL_HOST_USER }}
            _EMAIL_HOST_PASSWORD=${{ secrets._EMAIL_HOST_PASSWORD }}
            _CLOUD_NAME=${{ secrets._CLOUD_NAME }}
            _CLOUD_API_KEY=${{ secrets._CLOUD_API_KEY }}
            _CLOUD_API_SECRET=${{ secrets._CLOUD_API_SECRET }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
